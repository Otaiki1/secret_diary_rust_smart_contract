type Error = variant {
  InvalidInput : record { msg : text };
  NotFound : record { msg : text };
  Unauthorized : record { msg : text };
  CounterIncrementFailed;
};
type Result = variant { Ok : SecretMessage; Err : Error };
type Result_1 = variant { Ok : text; Err : Error };
type SecretMessage = record {
  id : nat64;
  updated_at : opt nat64;
  created_at : nat64;
  secret_key : text;
  encrypted_message : text;
};
type SecretMessagePayload = record {
  secret_key : text;
  encrypted_message : text;
};
service : {
  add_message : (SecretMessagePayload) -> (Result);
  get_message : (nat64, text) -> (Result_1) query;
}
